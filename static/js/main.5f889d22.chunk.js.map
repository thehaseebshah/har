{"version":3,"sources":["Components/Title.js","App.js","reportWebVitals.js","index.js"],"names":["Title","sendResponse","a","axios","post","data","vals","res","useState","X","setX","Y","setY","Z","setZ","result","setresult","X1","slice","Y1","Z1","split","map","item","parseInt","className","onChange","e","target","value","type","name","onClick","console","log","then","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SA8FeA,EA1FH,WAGV,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,sEACHC,IAAMC,KAAK,oCAAsC,CAEhEC,KAAKC,IAHa,cACbC,EADa,yBAQbA,EAAIF,MARS,2CAAH,qDAapB,EAAeG,mBAAS,IAAxB,mBAAOC,EAAP,KAASC,EAAT,KAKI,EAAeF,mBAAS,IAAxB,mBAAOG,EAAP,KAASC,EAAT,KAKA,EAAeJ,mBAAS,IAAxB,mBAAOK,EAAP,KAASC,EAAT,KAKA,EAAyBN,mBAAS,IAAlC,mBAAOO,EAAP,KAAcC,EAAd,KAQAC,EAAKR,EAAES,MAAM,GAAG,GAChBC,EAAKR,EAAEO,MAAM,GAAG,GAChBE,EAAKP,EAAEK,MAAM,GAAG,GAEhB,IAAID,EAAKA,EAAGI,MAAM,KAAKC,KAAI,SAASC,GAClC,OAAOC,SAASD,EAAM,OAGpBJ,EAAKA,EAAGE,MAAM,KAAKC,KAAI,SAASC,GAClC,OAAOC,SAASD,EAAM,OAGpBH,EAAKA,EAAGC,MAAM,KAAKC,KAAI,SAASC,GAClC,OAAOC,SAASD,EAAM,OAGpBjB,EAAO,CAACW,EAAGE,EAAGC,GAClB,OACE,8BACE,sBAAKK,UAAU,mBAAf,UACE,uBACA,uBACA,uBACA,uBACA,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,uCACA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sDACA,uBAAOC,SAnDC,SAACC,GACjBjB,EAAKiB,EAAEC,OAAOC,QAkD0BC,KAAK,OAAOL,UAAU,QAAQM,KAAK,SAErE,sBAAKN,UAAU,aAAf,UACE,sDACA,uBAAOC,SAlDC,SAACC,GACjBf,EAAKe,EAAEC,OAAOC,QAiD0BC,KAAK,OAAOL,UAAU,QAAQM,KAAK,SAErE,sBAAKN,UAAU,aAAf,UACE,sDACA,uBAAOC,SAjDC,SAACC,GACjBb,EAAKa,EAAEC,OAAOC,QAgD0BC,KAAK,OAAOL,UAAU,QAAQM,KAAK,SAErE,qBAAKN,UAAU,aAAf,SACE,uBAAOK,KAAK,SAASD,MAAM,SAASJ,UAAU,MAAMO,QA/C9C,WAChBC,QAAQC,IAAI5B,GACVL,IAAekC,MAAK,SAAC9B,GAAD,OAAUW,EAAUX,MACxCJ,IAAekC,MAAK,SAAC9B,GAAD,OAAU4B,QAAQC,IAAI7B,WA8CpC,kDAAqBU,iBClFtBqB,EAAb,4JACE,WACE,OACE,8BACE,cAAC,EAAD,UAJR,GAAyBC,aAUVD,ICDAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5f889d22.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport axios from 'axios';\r\nimport \"./Title.css\";\r\n\r\nconst Title=()=> {\r\n\r\n  \r\n  const sendResponse = async () => {\r\n    const res=await axios.post('http://34.131.37.218:5000/predict',  {\r\n    \r\n     data:vals\r\n     \r\n   });\r\n  // console.log(res.data)\r\n    \r\n   return res.data\r\n  \r\n}\r\n\r\n\r\nconst [X,setX]=useState('');\r\n    const handleChangeX=(e)=>{\r\n        setX(e.target.value);}\r\n    \r\n\r\n    const [Y,setY]=useState('');\r\n    const handleChangeY=(e)=>{\r\n        setY(e.target.value);}\r\n    \r\n\r\n    const [Z,setZ]=useState('');\r\n    const handleChangeZ=(e)=>{\r\n        setZ(e.target.value);}\r\n\r\n   \r\n    const [result,setresult]=useState('');\r\n    const handleClick=()=>{\r\n      console.log(vals);\r\n        sendResponse().then((data) => setresult(data));\r\n        sendResponse().then((data) => console.log(data));\r\n\r\n    }\r\n\r\n    X1 = X.slice(1,-1)\r\n    Y1 = Y.slice(1,-1)\r\n    Z1 = Z.slice(1,-1)\r\n\r\n    var X1 = X1.split(',').map(function(item) {\r\n      return parseInt(item, 10);\r\n    });\r\n\r\n    var Y1 = Y1.split(',').map(function(item) {\r\n      return parseInt(item, 10);\r\n    });\r\n\r\n    var Z1 = Z1.split(',').map(function(item) {\r\n      return parseInt(item, 10);\r\n    });\r\n\r\n    var vals = [X1,Y1,Z1];\r\n    return (\r\n      <div>\r\n        <div className=\"py-5 text-center\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div className=\"wrapper\">\r\n            <div className=\"title\">human activity recognizer</div>\r\n            <div className=\"form\">\r\n              <div className=\"inputfield\">\r\n                <label>Enter value of Xs</label>\r\n                <input onChange={handleChangeX} type=\"text\" className=\"input\" name=\"X\" />\r\n              </div>\r\n              <div className=\"inputfield\">\r\n                <label>Enter value of Ys</label>\r\n                <input onChange={handleChangeY} type=\"text\" className=\"input\" name=\"Y\"/>\r\n              </div>\r\n              <div className=\"inputfield\">\r\n                <label>Enter value of Zs</label>\r\n                <input onChange={handleChangeZ} type=\"text\" className=\"input\" name=\"Z\"/>\r\n              </div>\r\n              <div className=\"inputfield\">\r\n                <input type=\"submit\" value=\"Submit\" className=\"btn\" onClick={handleClick}/>\r\n              </div>\r\n              <p>Predicted Class: {result}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react'\nimport Title from './Components/Title'\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Title/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}